apiVersion: v1
kind: Namespace
metadata:
  name: test-app
  labels:
    app: hello-world
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-world
  namespace: test-app
  labels:
    app: hello-world
spec:
  replicas: 2
  selector:
    matchLabels:
      app: hello-world
  template:
    metadata:
      labels:
        app: hello-world
    spec:
      containers:
      - name: hello-world
        image: localhost:5000/hello-world-app:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        env:
        - name: RUST_LOG
          value: "info"
      - name: oauth2-proxy
        image: quay.io/oauth2-proxy/oauth2-proxy:v7.6.0
        args:
        - --provider=keycloak-oidc
        - --oidc-issuer-url=http://keycloak.keycloak.svc.cluster.local/realms/lab
        - --email-domain=*
        - --http-address=0.0.0.0:4180
        - --upstream=http://localhost:8000
        - --cookie-secure=false
        - --cookie-refresh=1h
        - --cookie-name=_oauth2_proxy
        - --skip-provider-button=true
        - --pass-authorization-header=true
        - --pass-access-token=true
        - --set-authorization-header=true
        - --reverse-proxy=true
        - --whitelist-domain=.local
        - --redirect-url=http://hello-world.local/oauth2/callback
        - --insecure-oidc-skip-issuer-verification=true
        env:
        - name: OAUTH2_PROXY_CLIENT_ID
          valueFrom:
            secretKeyRef:
              key: client-id
              name: oauth2-proxy
        - name: OAUTH2_PROXY_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: client-secret
              name: oauth2-proxy
        - name: OAUTH2_PROXY_COOKIE_SECRET
          valueFrom:
            secretKeyRef:
              key: cookie-secret
              name: oauth2-proxy
        ports:
        - containerPort: 4180
          name: oauth2
---
apiVersion: v1
kind: Service
metadata:
  name: hello-world
  namespace: test-app
  labels:
    app: hello-world
spec:
  selector:
    app: hello-world
  ports:
  - port: 80
    targetPort: 4180
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hello-world
  namespace: test-app
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  ingressClassName: nginx
  rules:
  - host: hello-world.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: hello-world
            port:
              number: 80
