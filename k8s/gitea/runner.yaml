apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitea-runner
  namespace: gitea
  labels:
    app: gitea-runner
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitea-runner
  template:
    metadata:
      labels:
        app: gitea-runner
      annotations:
        linkerd.io/inject: disabled
    spec:
      containers:
      - name: runner
        image: gitea/act_runner:latest
        env:
        - name: GITEA_INSTANCE_URL
          value: "http://gitea.gitea.svc.cluster.local:3000"
        - name: GITEA_RUNNER_REGISTRATION_TOKEN
          valueFrom:
            secretKeyRef:
              name: gitea-runner
              key: GITEA_RUNNER_REGISTRATION_TOKEN
        - name: GITEA_RUNNER_NAME
          value: "k8s-runner"
        - name: DOCKER_HOST
          value: "unix:///var/run/dind/docker.sock"
        command: ["sh", "-c"]
        args:
        - |
          set -e
          
          # Wait for Gitea to be ready
          until wget -q --spider http://gitea.gitea.svc.cluster.local:3000/api/v1/version; do
            echo "Waiting for Gitea..."
            sleep 5
          done
 
          # Ensure required tools are present (image is Alpine-based)
          if ! command -v curl >/dev/null 2>&1 || ! command -v jq >/dev/null 2>&1 || ! command -v docker >/dev/null 2>&1; then
            echo "Installing curl, jq, docker-cli..."
            apk add --no-cache curl jq docker-cli >/dev/null
          fi
 
          # Point to docker-in-docker (TCP)
          export DOCKER_HOST=tcp://localhost:2375

          # Wait for Docker daemon
          until docker info >/dev/null 2>&1; do
            echo "Waiting for Docker daemon..."
            sleep 3
          done

          # Use provided token if available; otherwise try API as admin
          TOKEN="${GITEA_RUNNER_REGISTRATION_TOKEN:-}"
          if [ -z "$TOKEN" ] || [ "$TOKEN" = "null" ]; then
            TOKEN=$(curl -fsSL -u admin:admin123 \
              http://gitea.gitea.svc.cluster.local:3000/api/v1/actions/runners/registration-token \
              | jq -r '.token' || true)
          fi
 
          if [ -z "$TOKEN" ] || [ "$TOKEN" = "null" ]; then
            echo "Failed to get registration token"
            exit 1
          fi
 
          echo "Got token: $TOKEN"
 
          # Register runner
          /usr/local/bin/act_runner register \
            --instance http://gitea.gitea.svc.cluster.local:3000 \
            --token "$TOKEN" \
            --name k8s-runner \
            --labels ubuntu-latest:docker://node:16-bullseye
 
          # Start runner
          exec /usr/local/bin/act_runner daemon
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        volumeMounts:
        - name: runner-data
          mountPath: /data
        - name: docker-sock
          mountPath: /var/run/dind
        - name: docker-graph
          mountPath: /var/lib/docker
      - name: dind
        image: docker:24-dind
        securityContext:
          privileged: true
        env:
        - name: DOCKER_TLS_CERTDIR
          value: ""
        command: ["dockerd-entrypoint.sh"]
        args:
        - "--host=unix:///var/run/dind/docker.sock"
        volumeMounts:
        - name: docker-sock
          mountPath: /var/run/dind
        - name: docker-graph
          mountPath: /var/lib/docker
      volumes:
      - name: runner-data
        emptyDir: {}
      - name: docker-sock
        emptyDir: {}
      - name: docker-graph
        emptyDir: {}
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: gitea-runner
  namespace: gitea
spec:
  selector:
    app: gitea-runner
  ports:
  - port: 80
    targetPort: 8080
