---
- name: Deploy Core Services (Day 3-4)
  hosts: k3s_servers
  become: true
  vars:
    registry_url: "registry.local:5000"
    postgres_version: "15.5"
    keycloak_version: "23.0.3"
    gitea_version: "1.21.4"
    cnpg_version: "1.20.1"

  tasks:
    - name: Verify K3s cluster is ready
      shell: kubectl get nodes
      register: cluster_nodes
      changed_when: false

    - name: Display cluster nodes
      debug:
        var: cluster_nodes.stdout_lines

    - name: Create namespaces for core services
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: "{{ item }}"
      loop:
        - postgres
        - keycloak
        - gitea
        - monitoring

    - name: Install CloudNativePG operator
      kubernetes.core.helm:
        name: cnpg
        chart_ref: cloudnative-pg
        chart_repo_url: https://cloudnative-pg.github.io/charts
        release_namespace: postgres
        create_namespace: false
        values:
          replicaCount: 1
          image:
            repository: "{{ registry_url }}/cloudnative-pg/cloudnative-pg"
            tag: "{{ cnpg_version }}"

    - name: Wait for CloudNativePG operator to be ready
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: postgres
        label_selectors:
          - app=cloudnative-pg
      register: cnpg_pods
      until: cnpg_pods.resources | length > 0 and cnpg_pods.resources[0].status.phase == 'Running'
      retries: 30
      delay: 10

    - name: Create PostgreSQL cluster
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: postgresql.cnpg.io/v1
          kind: Cluster
          metadata:
            name: postgres-cluster
            namespace: postgres
          spec:
            instances: 1
            imageName: "{{ registry_url }}/cloudnative-pg/postgresql:{{ postgres_version }}"
            bootstrap:
              initdb:
                database: appdb
                owner: appuser
                secret:
                  name: postgres-secret
            storage:
              size: 10Gi
              storageClass: local-path

    - name: Create PostgreSQL secret
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: postgres-secret
            namespace: postgres
          type: Opaque
          data:
            username: YXBwdXNlcg==  # appuser
            password: YXBwcGFzc3dvcmQ=  # apppassword

    - name: Wait for PostgreSQL cluster to be ready
      kubernetes.core.k8s_info:
        api_version: postgresql.cnpg.io/v1
        kind: Cluster
        name: postgres-cluster
        namespace: postgres
      register: postgres_cluster
      until: postgres_cluster.resources[0].status.phase == 'Healthy'
      retries: 60
      delay: 10

    - name: Deploy Keycloak
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: keycloak
            namespace: keycloak
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: keycloak
            template:
              metadata:
                labels:
                  app: keycloak
              spec:
                containers:
                - name: keycloak
                  image: "{{ registry_url }}/keycloak/keycloak:{{ keycloak_version }}"
                  args:
                  - start-dev
                  - --http-enabled=true
                  - --http-port=8080
                  - --hostname-strict=false
                  - --hostname-strict-https=false
                  env:
                  - name: KEYCLOAK_ADMIN
                    value: "admin"
                  - name: KEYCLOAK_ADMIN_PASSWORD
                    value: "admin123"
                  - name: KC_DB
                    value: "postgres"
                  - name: KC_DB_URL
                    value: "jdbc:postgresql://postgres-cluster-rw.postgres.svc.cluster.local:5432/keycloak"
                  - name: KC_DB_USERNAME
                    valueFrom:
                      secretKeyRef:
                        name: postgres-secret
                        key: username
                  - name: KC_DB_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: postgres-secret
                        key: password
                  ports:
                  - containerPort: 8080
                  resources:
                    requests:
                      memory: "512Mi"
                      cpu: "250m"
                    limits:
                      memory: "1Gi"
                      cpu: "500m"

    - name: Create Keycloak service
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: keycloak
            namespace: keycloak
          spec:
            selector:
              app: keycloak
            ports:
            - protocol: TCP
              port: 8080
              targetPort: 8080
            type: ClusterIP

    - name: Wait for Keycloak to be ready
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: keycloa
        label_selectors:
          - app=keycloak
      register: keycloak_pods
      until: keycloak_pods.resources | length > 0 and keycloak_pods.resources[0].status.phase == 'Running'
      retries: 60
      delay: 10

    - name: Deploy Gitea
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: gitea
            namespace: gitea
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: gitea
            template:
              metadata:
                labels:
                  app: gitea
              spec:
                containers:
                - name: gitea
                  image: "{{ registry_url }}/gitea/gitea:{{ gitea_version }}"
                  args:
                  - web
                  env:
                  - name: GITEA__database__DB_TYPE
                    value: "postgres"
                  - name: GITEA__database__HOST
                    value: "postgres-cluster-rw.postgres.svc.cluster.local:5432"
                  - name: GITEA__database__NAME
                    value: "gitea"
                  - name: GITEA__database__USER
                    valueFrom:
                      secretKeyRef:
                        name: postgres-secret
                        key: username
                  - name: GITEA__database__PASSWD
                    valueFrom:
                      secretKeyRef:
                        name: postgres-secret
                        key: password
                  - name: GITEA__server__DOMAIN
                    value: "gitea.local"
                  - name: GITEA__server__ROOT_URL
                    value: "http://gitea.local:3000/"
                  ports:
                  - containerPort: 3000
                  - containerPort: 222
                  resources:
                    requests:
                      memory: "256Mi"
                      cpu: "100m"
                    limits:
                      memory: "512Mi"
                      cpu: "200m"

    - name: Create Gitea service
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: gitea
            namespace: gitea
          spec:
            selector:
              app: gitea
            ports:
            - name: http
              protocol: TCP
              port: 3000
              targetPort: 3000
            - name: ssh
              protocol: TCP
              port: 222
              targetPort: 222
            type: ClusterIP

    - name: Wait for Gitea to be ready
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: gitea
        label_selectors:
          - app=gitea
      register: gitea_pods
      until: gitea_pods.resources | length > 0 and gitea_pods.resources[0].status.phase == 'Running'
      retries: 60
      delay: 10

    - name: Display service status
      shell: |
        echo "=== PostgreSQL ==="
        kubectl get pods -n postgres
        echo ""
        echo "=== Keycloak ==="
        kubectl get pods -n keycloak
        echo ""
        echo "=== Gitea ==="
        kubectl get pods -n gitea
        echo ""
        echo "=== Services ==="
        kubectl get svc --all-namespaces | grep -E "(postgres|keycloak|gitea)"
      register: service_status

    - name: Show service status
      debug:
        var: service_status.stdout_lines

    - name: Display access information
      debug:
        msg: |
          üéâ Core Services Deployed Successfully!
          
          üìç Access Information:
          - Keycloak: http://keycloak.keycloak.svc.cluster.local:8080
            Username: admin
            Password: admin123
          
          - Gitea: http://gitea.gitea.svc.cluster.local:3000
            First run setup required
          
          - PostgreSQL: postgres-cluster-rw.postgres.svc.cluster.local:5432
            Database: appdb
            Username: appuser
            Password: apppassword
          
          üîó Next Steps:
          1. Configure Keycloak realm and client
          2. Set up Gitea repository
          3. Begin Rust application development
          4. Deploy ArgoCD for GitOps
